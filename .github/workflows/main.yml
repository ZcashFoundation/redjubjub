name: CI

on: [push]

jobs:
  test_nightly:
    name: test on nightly
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.1.7
    # Because we use nightly features for building docs,
    # using --all-features will fail without nightly toolchain.
    - uses: actions-rs/toolchain@v1.0.7
      with:
        toolchain: nightly
        override: true
    - uses: actions-rs/cargo@v1.0.3
      with:
        command: test
        args: --all-features

  build-nostd:
    name: Build target ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - wasm32-wasi
          - thumbv7em-none-eabihf
    steps:
      - uses: actions/checkout@v4
        with:
          path: crate_root
      # We use a synthetic crate to ensure no dev-dependencies are enabled, which can
      # be incompatible with some of these targets.
      - name: Create synthetic crate for testing
        run: cargo init --lib ci-build
      - name: Copy Rust version into synthetic crate
        run: cp crate_root/rust-toolchain.toml ci-build/
      - name: Copy patch directives into synthetic crate
        run: |
          echo "[patch.crates-io]" >> ./ci-build/Cargo.toml
          cat ./crate_root/Cargo.toml | sed "0,/.\+\(patch.crates.\+\)/d" >> ./ci-build/Cargo.toml
      - name: Add no_std pragma to lib.rs
        run: |
          echo "#![no_std]" > ./ci-build/src/lib.rs
      - name: Add redjubjub as a dependency of the synthetic crate
        working-directory: ./ci-build
        run: cargo add --no-default-features --path ../crate_root
      - name: Add target
        working-directory: ./ci-build
        run: rustup target add ${{ matrix.target }}
      - name: Build for target
        working-directory: ./ci-build
        run: cargo build --verbose --target ${{ matrix.target }}
